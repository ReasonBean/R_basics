### statistical function
sum(iris$Sepal.Length)
min(iris$Sepal.Length)
max(iris$Sepal.Length)
range(iris$Sepal.Length)
mean(iris$Sepal.Length)
median(iris$Sepal.Length)
sd(iris$Sepal.Length)
fivenum(iris$Sepal.Length) # Min, Q1, Median, Q2, MAX

num<-as.numeric(summary(iris$Sepal.Length)["Min."]) # Save the value from the summary
num

abs(iris$Sepal.Length)
sqrt(iris$Sepal.Length)
ceiling(iris$Sepal.Length)
floor(iris$Sepal.Length)
trunc(iris$Sepal.Length)
round((iris$Sepal.Length), 0)
log10(iris$Sepal.Length)
log2(iris$Sepal.Length)
exp(iris$Sepal.Length)
factorial(iris$Sepal.Length) # factorial with integer

cos(iris$Sepal.Length)
sin(iris$Sepal.Length)
tan(iris$Sepal.Length)

### statistical function
## normal distribution
random_numbers <- rnorm(5, mean = 0, sd = 1) # choose 5 numbers with mean=0, sd=1 normal distribution
quantile_value <- qnorm(0.975, mean = 0, sd = 1) # Calculate values corresponding to the top 2.5% in a normal distribution with a mean=0, sd=1
cumulative_prob <- pnorm(1.96, mean = 0, sd = 1) # Calculate the cumulative probability of x <= 1.96 from a normal distribution with a mean=0, sd=1
density <- dnorm(0, mean = 0, sd = 1) # Calculate the probability density of x = 0 in a normal distribution with a mean=0, sd=1, y score

## uniform distribution
runif(5, 0, 1) # choose 10 numbers with min=0, max=1 uniform distribution

### linear regression
lm.res<-lm(iris$Petal.Width ~ iris$Petal.Length) # simple linear regression model
lm.res<-lm(Petal.Width~., data=iris) # multiple linear regression model
plot(iris$Petal.Length, iris$Petal.Width) # plot
abline(lm.res) # regression line

lm.res$coeff[1] # intercept
lm.res$coeff[2] # iris$Petal.Length
